<?xml version="1.0" encoding="UTF-8"?>
<module type="RUBY_MODULE" version="4">
  <component name="ModuleRunConfigurationManager">
    <shared />
    <local>
      <configuration default="false" name="BcnSurfTest" type="TestUnitRunConfigurationType" factoryName="Test::Unit/Shoulda/Minitest">
        <predefined_log_file id="RUBY_TESTUNIT" enabled="true" />
        <module name="BcnSurfBot" />
        <RTEST_RUN_CONFIG_SETTINGS_ID NAME="RUBY_ARGS" VALUE="-e $stdout.sync=true;$stderr.sync=true;load($0=ARGV.shift)" />
        <RTEST_RUN_CONFIG_SETTINGS_ID NAME="WORK DIR" VALUE="" />
        <RTEST_RUN_CONFIG_SETTINGS_ID NAME="SHOULD_USE_SDK" VALUE="false" />
        <RTEST_RUN_CONFIG_SETTINGS_ID NAME="ALTERN_SDK_NAME" VALUE="" />
        <RTEST_RUN_CONFIG_SETTINGS_ID NAME="myPassParentEnvs" VALUE="true" />
        <envs />
        <EXTENSION ID="BundlerRunConfigurationExtension" bundleExecEnabled="false" />
        <EXTENSION ID="JRubyRunConfigurationExtension" NailgunExecEnabled="false" />
        <EXTENSION ID="RubyCoverageRunConfigurationExtension" enabled="false" sample_coverage="true" track_test_folders="true" runner="rcov">
          <COVERAGE_PATTERN ENABLED="true">
            <PATTERN REGEXPS="/.rvm/" INCLUDED="false" />
          </COVERAGE_PATTERN>
        </EXTENSION>
        <RTEST_RUN_CONFIG_SETTINGS_ID NAME="TESTS_FOLDER_PATH" VALUE="" />
        <RTEST_RUN_CONFIG_SETTINGS_ID NAME="TEST_SCRIPT_PATH" VALUE="$MODULE_DIR$/bcn_surf_bot_test.rb" />
        <RTEST_RUN_CONFIG_SETTINGS_ID NAME="TEST_FILE_MASK" VALUE="" />
        <RTEST_RUN_CONFIG_SETTINGS_ID NAME="TEST_METHOD_NAME" VALUE="" />
        <RTEST_RUN_CONFIG_SETTINGS_ID NAME="TEST_TEST_TYPE" VALUE="TEST_SCRIPT" />
        <RTEST_RUN_CONFIG_SETTINGS_ID NAME="DRB" VALUE="false" />
        <RTEST_RUN_CONFIG_SETTINGS_ID NAME="ZEUS" VALUE="false" />
        <RTEST_RUN_CONFIG_SETTINGS_ID NAME="SPRING" VALUE="false" />
        <RTEST_RUN_CONFIG_SETTINGS_ID NAME="RUNNER_OPTIONS" VALUE="" />
        <method />
      </configuration>
      <configuration default="false" name="bcn_surf_bot" type="RubyRunConfigurationType" factoryName="Ruby" temporary="true">
        <module name="BcnSurfBot" />
        <RUBY_RUN_CONFIG NAME="RUBY_ARGS" VALUE="-e $stdout.sync=true;$stderr.sync=true;load($0=ARGV.shift)" />
        <RUBY_RUN_CONFIG NAME="WORK DIR" VALUE="$MODULE_DIR$" />
        <RUBY_RUN_CONFIG NAME="SHOULD_USE_SDK" VALUE="false" />
        <RUBY_RUN_CONFIG NAME="ALTERN_SDK_NAME" VALUE="" />
        <RUBY_RUN_CONFIG NAME="myPassParentEnvs" VALUE="true" />
        <envs>
          <env name="MSW_API" value="http://magicseaweed.com/api/6d036580539d13b7f78aac3368debcd8/" />
          <env name="BOT_API" value="520728214:AAE9yOWbX6p2J2v3G7Q5cWRECvhgsWSGO6Q" />
        </envs>
        <EXTENSION ID="BundlerRunConfigurationExtension" bundleExecEnabled="true" />
        <EXTENSION ID="JRubyRunConfigurationExtension" NailgunExecEnabled="false" />
        <EXTENSION ID="RubyCoverageRunConfigurationExtension" enabled="false" sample_coverage="true" track_test_folders="true" runner="rcov">
          <COVERAGE_PATTERN ENABLED="true">
            <PATTERN REGEXPS="/.rvm/" INCLUDED="false" />
          </COVERAGE_PATTERN>
        </EXTENSION>
        <RUBY_RUN_CONFIG NAME="SCRIPT_PATH" VALUE="$MODULE_DIR$/bcn_surf_bot.rb" />
        <RUBY_RUN_CONFIG NAME="SCRIPT_ARGS" VALUE="" />
        <method />
      </configuration>
    </local>
  </component>
  <component name="NewModuleRootManager">
    <content url="file://$MODULE_DIR$" />
    <orderEntry type="inheritedJdk" />
    <orderEntry type="sourceFolder" forTests="false" />
    <orderEntry type="library" scope="PROVIDED" name="axiom-types (v0.1.1, rbenv: 2.4.0) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="bundler (v1.16.1, rbenv: 2.4.0) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="coercible (v1.0.0, rbenv: 2.4.0) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="descendants_tracker (v0.0.4, rbenv: 2.4.0) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="equalizer (v0.0.11, rbenv: 2.4.0) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="faraday (v0.13.1, rbenv: 2.4.0) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="httparty (v0.15.6, rbenv: 2.4.0) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="ice_nine (v0.11.2, rbenv: 2.4.0) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="inflecto (v0.0.2, rbenv: 2.4.0) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="metaclass (v0.0.4, rbenv: 2.4.0) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="mocha (v1.3.0, rbenv: 2.4.0) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="multi_xml (v0.6.0, rbenv: 2.4.0) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="multipart-post (v2.0.0, rbenv: 2.4.0) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="power_assert (v1.1.1, rbenv: 2.4.0) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="telegram-bot-ruby (v0.8.6.1, rbenv: 2.4.0) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="test-unit (v3.2.7, rbenv: 2.4.0) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="thread_safe (v0.3.6, rbenv: 2.4.0) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="virtus (v1.0.5, rbenv: 2.4.0) [gem]" level="application" />
  </component>
</module>